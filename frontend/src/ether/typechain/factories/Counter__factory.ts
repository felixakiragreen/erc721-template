/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "CountedTo",
    type: "event",
  },
  {
    inputs: [],
    name: "countDown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "by",
        type: "uint256",
      },
    ],
    name: "countUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610763806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635fcbd5b614610046578063a87d942c14610064578063da28179e14610082575b600080fd5b61004e6100b2565b60405161005b919061050c565b60405180910390f35b61006c610195565b604051610079919061050c565b60405180910390f35b61009c6004803603810190610097919061039e565b61019e565b6040516100a9919061050c565b60405180910390f35b60006100f56040518060400160405280601281526020017f636f756e74446f776e3a20636f756e74203d00000000000000000000000000008152506000546102c4565b600060016000546101069190610599565b9050600054811061014c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610143906104ac565b60405180910390fd5b806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e67600054604051610184919061050c565b60405180910390a160005491505090565b60008054905090565b60006101e16040518060400160405280601081526020017f636f756e7455703a20636f756e74203d000000000000000000000000000000008152506000546102c4565b60008211610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b906104cc565b60405180910390fd5b600a8210610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e906104ec565b60405180910390fd5b6000826000546102779190610543565b9050806000819055507fa501f5a8ef1a812bff54fb3642cfaec066c351af1716c48a7bdd05e0bb631e676000546040516102b1919061050c565b60405180910390a1600054915050919050565b61035c82826040516024016102da92919061047c565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610360565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061039881610716565b92915050565b6000602082840312156103b4576103b3610639565b5b60006103c284828501610389565b91505092915050565b60006103d682610527565b6103e08185610532565b93506103f08185602086016105d7565b6103f98161063e565b840191505092915050565b6000610411601183610532565b915061041c8261064f565b602082019050919050565b6000610434602783610532565b915061043f82610678565b604082019050919050565b6000610457602a83610532565b9150610462826106c7565b604082019050919050565b610476816105cd565b82525050565b6000604082019050818103600083015261049681856103cb565b90506104a5602083018461046d565b9392505050565b600060208201905081810360008301526104c581610404565b9050919050565b600060208201905081810360008301526104e581610427565b9050919050565b600060208201905081810360008301526105058161044a565b9050919050565b6000602082019050610521600083018461046d565b92915050565b600081519050919050565b600082825260208201905092915050565b600061054e826105cd565b9150610559836105cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561058e5761058d61060a565b5b828201905092915050565b60006105a4826105cd565b91506105af836105cd565b9250828210156105c2576105c161060a565b5b828203905092915050565b6000819050919050565b60005b838110156105f55780820151818401526020810190506105da565b83811115610604576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f55696e7432353620756e646572666c6f77000000000000000000000000000000600082015250565b7f63616e6e6f7420636f756e7420757020776974682076616c7565206c6f77657260008201527f207468616e203000000000000000000000000000000000000000000000000000602082015250565b7f63616e6e6f7420636f756e7420757020776974682076616c756520677265617460008201527f6572207468616e20313000000000000000000000000000000000000000000000602082015250565b61071f816105cd565b811461072a57600080fd5b5056fea264697066735822122020c879a6c8eec9745342e3706b993e9b8307c0060a655c5858520f4d4ab4f64564736f6c63430008060033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
